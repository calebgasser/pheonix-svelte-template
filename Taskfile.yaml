---
version: "3"

dotenv: ['config.env']

vars:
  CONTAINER_RUN_TIME:
    sh: |
      if command -v nerdctl &> /dev/null; then
        echo "nerdctl"
      elif command -v docker &> /dev/null; then
        echo "dockere"
      fi
  COMPOSE_RUN_TIME:
    sh: |
      if command -v nerdctl &> /dev/null; then
        echo "nerdctl compose"
      elif command -v docker-compose &> /dev/null; then
        echo "docker-compose"
      fi
  PROJECT_DIR:
    sh: git rev-parse --show-toplevel
  APP_NAME:
    sh: source config.env && echo "${APP_NAME}"
  DOCKER_FILE: "{{.PROJECT_DIR}}/Dockerfile"
  APP_SRC_DIR: "{{.PROJECT_DIR}}/{{.APP_NAME}}"
  COMPOSE_FILE: "{{.PROJECT_DIR}}/deployments/compose/compose.yaml"

env:
  PROJECT_DIR: "{{.PROJECT_DIR}}"
  DOCKER_FILE: "{{.DOCKER_FILE}}"
  APP_SRC_DIR: "{{.APP_SRC_DIR}}"
  COMPOSE_FILE: "{{.COMPOSE_FILE}}"
  UID:
    sh: id -u
  GID:
    sh: id -g

tasks:

  default:
    desc: Running `task` is the same as running `task up`
    cmds:
      - task: up

  appdir:
    desc: Create project directory.
    cmds:
      - mkdir $APP_SRC_DIR
    status:
      - test -d $APP_SRC_DIR

  up:
    deps: [appdir, remove]
    desc: >
      Run application with compose file.
      This also starts a local postgres database.
    cmds:
      - >
        command {{.COMPOSE_RUN_TIME}}
        -p $APP_NAME
        -f $COMPOSE_FILE
        up -d
        --build

  logs:
    desc: Show logs for application container and follow them.
    cmds:
      - command {{.CONTAINER_RUN_TIME}} logs --follow $APP_NAME

  shell:
    desc: Get a shell in your application container.
    cmds:
      - command {{.CONTAINER_RUN_TIME}} exec -it $APP_NAME /bin/bash

  down:
    desc: Stop resoruces created by compose file.
    ignore_error: true
    cmds:
      - >
        command {{.COMPOSE_RUN_TIME}}
        -f $COMPOSE_FILE
        down

  remove:
    desc: >
      Remove all containers and volumes.
      This will not affect your source code but
      it WILL remove postgres data.
    ignore_error: true
    cmds:
      - >
        command {{.COMPOSE_RUN_TIME}}
        -f $COMPOSE_FILE
        down -v
      - >
        command {{.CONTAINER_RUN_TIME}} ps -a -q
        | xargs -- nerdctl container stop
      - >
        command {{.CONTAINER_RUN_TIME}} ps -a -q
        | xargs -- nerdctl container rm
